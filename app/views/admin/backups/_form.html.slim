= simple_form_for([:admin, @backup]) do |f|
  .card[
    data-controller="admin-cron"
  ]
    .card-header
      h3.card-title = t('simple_form.labels.backup.general')
    .card-body
      = f.error_notification

      = f.input :enabled
      = f.input :key, required: true
      = f.input :max_keeps, required: true
      / = f.input :notification

    .card-header.pt-0
      h3.card-title 定时任务
    .card-body
      = f.input :schedule, required: true, input_html: { data: { action: 'admin-cron#parse' } }

      .form-group.string.required.backup_schedule.form-group-valid
        label.string.required for="backup_schedule"
          = t('simple_form.labels.backup.next_schedule_at')
        input.form-control[
          type="text"
          data-admin-cron-target="source"
          disabled="true"
          value="#{@backup.schedule ? next_schedule_to_human(@backup.schedule) : ''}"
        ]

    .card-header.pt-0
      h3.card-title = t('simple_form.labels.backup.schedule_settings')
    .card-body
      = f.input :enabled_apps, as: :check_boxes, collection: all_apps, checked: @backup.enabled_apps
      = f.label :enabled_database
      = f.input :enabled_database, label: t('simple_form.labels.backup.database_switch')

    .card-footer
      - unless @backup.new_record?
        .float-right
          - if @backup.enabled
            = link_to '禁用', disable_admin_backup_path(@backup), \
              data: { turbo_method: :post }
          - else
            = link_to '启用', enable_admin_backup_path(@backup), \
              data: { turbo_method: :post }

      = f.button :submit